"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4785],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),g=r,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return t?a.createElement(m,o(o({ref:n},c),{},{components:t})):a.createElement(m,o({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},11791:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const i={title:"01.JPA \u7684 OPEN-IN-VIEW",description:"01.JPA \u7684 OPEN-IN-VIEW",slug:"open-in-view",sidebar_position:1,keywords:["JPA"],tags:["ORM"],draft:!1,hide_table_of_contents:!1,last_update:{date:"2023-04-16 18:17",author:"Hans"}},o=void 0,s={unversionedId:"framework-and-middleware/JPA/JPA \u7684 OPEN-IN-VIEW",id:"framework-and-middleware/JPA/JPA \u7684 OPEN-IN-VIEW",title:"01.JPA \u7684 OPEN-IN-VIEW",description:"01.JPA \u7684 OPEN-IN-VIEW",source:"@site/docs/05.framework-and-middleware/01.JPA/01.JPA \u7684 OPEN-IN-VIEW.md",sourceDirName:"05.framework-and-middleware/01.JPA",slug:"/framework-and-middleware/JPA/open-in-view",permalink:"/docs/framework-and-middleware/JPA/open-in-view",draft:!1,tags:[{label:"ORM",permalink:"/docs/tags/orm"}],version:"current",lastUpdatedBy:"Hans",lastUpdatedAt:1681640220,formattedLastUpdatedAt:"2023\u5e744\u670816\u65e5",sidebarPosition:1,frontMatter:{title:"01.JPA \u7684 OPEN-IN-VIEW",description:"01.JPA \u7684 OPEN-IN-VIEW",slug:"open-in-view",sidebar_position:1,keywords:["JPA"],tags:["ORM"],draft:!1,hide_table_of_contents:!1,last_update:{date:"2023-04-16 18:17",author:"Hans"}},sidebar:"tutorialSidebar",previous:{title:"jpa",permalink:"/docs/category/jpa"},next:{title:"\u56fe\u7247\u5904\u7406\u5e93-thumbnailator",permalink:"/docs/framework-and-middleware/\u56fe\u7247\u5904\u7406\u5e93-thumbnailator"}},l={},p=[{value:"Open Session In View",id:"open-session-in-view",level:2},{value:"OPEN-IN-VIEW \u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684",id:"open-in-view-\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684",level:2},{value:"\u5173\u4e8e spring.jpa.open-in-view \u914d\u7f6e",id:"\u5173\u4e8e-springjpaopen-in-view-\u914d\u7f6e",level:2},{value:"\u4f7f\u7528\u573a\u666f",id:"\u4f7f\u7528\u573a\u666f",level:2},{value:"\u5c0f\u7ed3",id:"\u5c0f\u7ed3",level:2}],c={toc:p};function u(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"open-session-in-view"},"Open Session In View"),(0,r.kt)("p",null,"Open Session In View\u7b80\u79f0OSIV\u3002"),(0,r.kt)("p",null,"\u5bf9hibernate\u6765\u8bf4ToMany\u5173\u7cfb\u9ed8\u8ba4\u662f\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u800cToOne\u5173\u7cfb\u5219\u9ed8\u8ba4\u662f\u7acb\u5373\u52a0\u8f7d\uff1b\u800c\u5728mvc\u7684controller\u4e2d\u8131\u79bb\u4e86persisent contenxt\uff0c\u4e8e\u662fentity\u53d8\u6210\u4e86detached\u72b6\u6001\uff0c\u8fd9\u4e2a\u65f6\u5019\u8981\u4f7f\u7528\u5ef6\u8fdf\u52a0\u8f7d\u7684\u5c5e\u6027\u65f6\u5c31\u4f1a\u629b\u51faLazyInitializationException\u5f02\u5e38\uff0c\u800cOpen Session In View\u6307\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(33286).Z,width:"1950",height:"858"})),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"OpenSessionInViewFilter"),"\xa0calls the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"openSession"),"\xa0method of the underlying\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"SessionFactory"),"\xa0and obtains a new\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Session"),"."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Session"),"\xa0is bound to the\xa0",(0,r.kt)("a",{parentName:"li",href:"http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/transaction/support/TransactionSynchronizationManager.html"},(0,r.kt)("inlineCode",{parentName:"a"},"TransactionSynchronizationManager")),"."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"OpenSessionInViewFilter"),"\xa0calls the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"doFilter"),"\xa0of the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"javax.servlet.FilterChain"),"\xa0object reference and the request is further processed"),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("a",{parentName:"li",href:"http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/DispatcherServlet.html"},(0,r.kt)("inlineCode",{parentName:"a"},"DispatcherServlet")),"\xa0is called, and it routes the HTTP request to the underlying\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostController"),"."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostController"),"\xa0calls the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostService"),"\xa0to get a list of\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Post"),"\xa0entities."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostService"),"\xa0opens a new transaction, and the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"HibernateTransactionManager"),"\xa0reuses the same\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Session"),"\xa0that was opened by the\xa0 ",(0,r.kt)("inlineCode",{parentName:"li"},"OpenSessionInViewFilter"),"."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostDAO"),"\xa0fetches the list of\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Post"),"\xa0entities without initializing any lazy association."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"PostService"),"\xa0commits the underlying transaction, but the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Session"),"\xa0is not closed because it was opened externally."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"DispatcherServlet"),"\xa0starts rendering the UI, which, in turn, navigates the lazy associations and triggers their initialization."),(0,r.kt)("li",{parentName:"ul"},"The\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"OpenSessionInViewFilter"),"\xa0can close the\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"Session"),", and the underlying database connection is released as well."))),(0,r.kt)("h2",{id:"open-in-view-\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684"},"OPEN-IN-VIEW \u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@ConfigurationProperties(prefix = "spring.jpa")\npublic class JpaProperties {\n\n    /**\n     * Additional native properties to set on the JPA provider.\n     */\n    private Map<String, String> properties = new HashMap<>();\n\n    /**\n     * Mapping resources (equivalent to "mapping-file" entries in persistence.xml).\n     */\n    private final List<String> mappingResources = new ArrayList<>();\n\n    /**\n     * Name of the target database to operate on, auto-detected by default. Can be\n     * alternatively set using the "Database" enum.\n     */\n    private String databasePlatform;\n\n    /**\n     * Target database to operate on, auto-detected by default. Can be alternatively set\n     * using the "databasePlatform" property.\n     */\n    private Database database;\n\n    /**\n     * Whether to initialize the schema on startup.\n     */\n    private boolean generateDdl = false;\n\n    /**\n     * Whether to enable logging of SQL statements.\n     */\n    private boolean showSql = false;\n\n    /**\n     * Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the\n     * thread for the entire processing of the request.\n     */\n    private Boolean openInView;\n\n    // ....\n\n}\n')),(0,r.kt)("p",null,"JpaProperties\u6709\u4e00\u4e2a\u914d\u7f6e\u9879\u4e3aopenInView(\u9ed8\u8ba4\u4e3atrue)\uff0c\u7528\u4e8e\u51b3\u5b9a\u662f\u5426\u6ce8\u518cOpenEntityManagerInViewInterceptor\uff0c\u5b83\u4f1a\u4e00\u4e2a\u8bf7\u6c42\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u4e2aJPA EntityManager"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\n@ConditionalOnWebApplication(type = Type.SERVLET)\n@ConditionalOnClass(WebMvcConfigurer.class)\n@ConditionalOnMissingBean({ OpenEntityManagerInViewInterceptor.class,\n        OpenEntityManagerInViewFilter.class })\n@ConditionalOnProperty(prefix = "spring.jpa", name = "open-in-view", havingValue = "true", matchIfMissing = true)\nprotected static class JpaWebConfiguration {\n\n    // Defined as a nested config to ensure WebMvcConfigurerAdapter is not read when\n    // not on the classpath\n    @Configuration\n    protected static class JpaWebMvcConfiguration implements WebMvcConfigurer {\n\n        private static final Log logger = LogFactory\n                .getLog(JpaWebMvcConfiguration.class);\n\n        private final JpaProperties jpaProperties;\n\n        protected JpaWebMvcConfiguration(JpaProperties jpaProperties) {\n            this.jpaProperties = jpaProperties;\n        }\n\n        @Bean\n        public OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor() {\n            if (this.jpaProperties.getOpenInView() == null) {\n                logger.warn("spring.jpa.open-in-view is enabled by default. "\n                        + "Therefore, database queries may be performed during view "\n                        + "rendering. Explicitly configure "\n                        + "spring.jpa.open-in-view to disable this warning");\n            }\n            return new OpenEntityManagerInViewInterceptor();\n        }\n\n        @Override\n        public void addInterceptors(InterceptorRegistry registry) {\n            registry.addWebRequestInterceptor(openEntityManagerInViewInterceptor());\n        }\n\n    }\n\n}\n')),(0,r.kt)("p",null,"JpaBaseConfiguration\u91cc\u5934\u6709\u4e2aJpaWebMvcConfiguration\u914d\u7f6e\uff0c\u5728web application\u7684\u7c7b\u578b\u662fType.SERVLET\u7684\u65f6\u5019\uff0c\u4e14spring.jpa.open-in-view\u4e0d\u662ffalse\u7684\u65f6\u5019\u6ce8\u518cOpenEntityManagerInViewInterceptor\uff0c\u7136\u540e\u6dfb\u52a0\u5230mvc\u7684webRequestInterceptor\u4e2d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class OpenEntityManagerInViewInterceptor extends EntityManagerFactoryAccessor implements AsyncWebRequestInterceptor {\n\n    /**\n     * Suffix that gets appended to the EntityManagerFactory toString\n     * representation for the "participate in existing entity manager\n     * handling" request attribute.\n     * @see #getParticipateAttributeName\n     */\n    public static final String PARTICIPATE_SUFFIX = ".PARTICIPATE";\n\n\n    @Override\n    public void preHandle(WebRequest request) throws DataAccessException {\n        String key = getParticipateAttributeName();\n        WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n        if (asyncManager.hasConcurrentResult() && applyEntityManagerBindingInterceptor(asyncManager, key)) {\n            return;\n        }\n\n        EntityManagerFactory emf = obtainEntityManagerFactory();\n        if (TransactionSynchronizationManager.hasResource(emf)) {\n            // Do not modify the EntityManager: just mark the request accordingly.\n            Integer count = (Integer) request.getAttribute(key, WebRequest.SCOPE_REQUEST);\n            int newCount = (count != null ? count + 1 : 1);\n            request.setAttribute(getParticipateAttributeName(), newCount, WebRequest.SCOPE_REQUEST);\n        }\n        else {\n            logger.debug("Opening JPA EntityManager in OpenEntityManagerInViewInterceptor");\n            try {\n                EntityManager em = createEntityManager();\n                EntityManagerHolder emHolder = new EntityManagerHolder(em);\n                TransactionSynchronizationManager.bindResource(emf, emHolder);\n\n                AsyncRequestInterceptor interceptor = new AsyncRequestInterceptor(emf, emHolder);\n                asyncManager.registerCallableInterceptor(key, interceptor);\n                asyncManager.registerDeferredResultInterceptor(key, interceptor);\n            }\n            catch (PersistenceException ex) {\n                throw new DataAccessResourceFailureException("Could not create JPA EntityManager", ex);\n            }\n        }\n    }\n\n    @Override\n    public void postHandle(WebRequest request, @Nullable ModelMap model) {\n    }\n\n    @Override\n    public void afterCompletion(WebRequest request, @Nullable Exception ex) throws DataAccessException {\n        if (!decrementParticipateCount(request)) {\n            EntityManagerHolder emHolder = (EntityManagerHolder)\n                    TransactionSynchronizationManager.unbindResource(obtainEntityManagerFactory());\n            logger.debug("Closing JPA EntityManager in OpenEntityManagerInViewInterceptor");\n            EntityManagerFactoryUtils.closeEntityManager(emHolder.getEntityManager());\n        }\n    }\n\n    private boolean decrementParticipateCount(WebRequest request) {\n        String participateAttributeName = getParticipateAttributeName();\n        Integer count = (Integer) request.getAttribute(participateAttributeName, WebRequest.SCOPE_REQUEST);\n        if (count == null) {\n            return false;\n        }\n        // Do not modify the Session: just clear the marker.\n        if (count > 1) {\n            request.setAttribute(participateAttributeName, count - 1, WebRequest.SCOPE_REQUEST);\n        }\n        else {\n            request.removeAttribute(participateAttributeName, WebRequest.SCOPE_REQUEST);\n        }\n        return true;\n    }\n\n    @Override\n    public void afterConcurrentHandlingStarted(WebRequest request) {\n        if (!decrementParticipateCount(request)) {\n            TransactionSynchronizationManager.unbindResource(obtainEntityManagerFactory());\n        }\n    }\n\n    /**\n     * Return the name of the request attribute that identifies that a request is\n     * already filtered. Default implementation takes the toString representation\n     * of the EntityManagerFactory instance and appends ".FILTERED".\n     * @see #PARTICIPATE_SUFFIX\n     */\n    protected String getParticipateAttributeName() {\n        return obtainEntityManagerFactory().toString() + PARTICIPATE_SUFFIX;\n    }\n\n\n    private boolean applyEntityManagerBindingInterceptor(WebAsyncManager asyncManager, String key) {\n        CallableProcessingInterceptor cpi = asyncManager.getCallableInterceptor(key);\n        if (cpi == null) {\n            return false;\n        }\n        ((AsyncRequestInterceptor) cpi).bindEntityManager();\n        return true;\n    }\n\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"OpenEntityManagerInViewInterceptor\u7ee7\u627f\u4e86\u62bd\u8c61\u7c7bEntityManagerFactoryAccessor\uff0c\u5b9e\u73b0\u4e86AsyncWebRequestInterceptor\u63a5\u53e3(",(0,r.kt)("inlineCode",{parentName:"li"},"\u5b9a\u4e49\u4e86afterConcurrentHandlingStarted\u65b9\u6cd5"),")\uff1bAsyncWebRequestInterceptor\u7ee7\u627f\u4e86WebRequestInterceptor(",(0,r.kt)("inlineCode",{parentName:"li"},"\u5b9a\u4e49\u4e86preHandle\u3001postHandle\u3001afterCompletion\u65b9\u6cd5"),")"),(0,r.kt)("li",{parentName:"ul"},"preHandle\u65b9\u6cd5\u4f1a\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u6709EntityManagerFactory\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5219\u4f1a\u5728request\u7684attribute\u4e2d\u7ef4\u62a4count\uff1b\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u5219\u4f1a\u521b\u5efaEntityManager(",(0,r.kt)("inlineCode",{parentName:"li"},"openSession"),")\uff0c\u7136\u540e\u4f7f\u7528TransactionSynchronizationManager.bindResource\u8fdb\u884c\u7ed1\u5b9a"),(0,r.kt)("li",{parentName:"ul"},"afterCompletion\u65b9\u6cd5\u4f1a\u5148\u5bf9request attribute\u4e2d\u7684count\u8fdb\u884c\u9012\u51cf(",(0,r.kt)("inlineCode",{parentName:"li"},"\u5982\u679c\u6709\u7684\u8bdd"),")\uff0c\u5f53count\u4e3a0\u7684\u65f6\u5019\u79fb\u9664\u8be5attribute\uff1b\u5982\u679crequest\u6ca1\u6709count\u5219\u4f7f\u7528TransactionSynchronizationManager.unbindResource\u8fdb\u884c\u89e3\u7ed1\uff0c\u7136\u540e\u5173\u95edEntityManager\uff1b\u5f02\u6b65\u7684afterConcurrentHandlingStarted\u65b9\u6cd5\u4e5f\u7c7b\u4f3c\uff0c\u4e3b\u8981\u662f\u8fdb\u884cunbind\u64cd\u4f5c")),(0,r.kt)("h2",{id:"\u5173\u4e8e-springjpaopen-in-view-\u914d\u7f6e"},"\u5173\u4e8e spring.jpa.open-in-view \u914d\u7f6e"),(0,r.kt)("p",null,"SpringBoot \u4e2d\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u901a\u8fc7\u4ee5\u4e0a\u5206\u6790\uff0c\u5176\u5b9e\u662f\u4e0d\u5efa\u8bae\u5f00\u542f\u7684\u3002\u540c\u65f6\uff0c\u5982\u679c\u4fdd\u7559\u9ed8\u8ba4\u914d\u7f6e\uff0c\u4f1a\u6709\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"warn")," \u7684\u65e5\u5fd7\u63d0\u793a\u3002"),(0,r.kt)("admonition",{title:"spring.jpa.open-in-view=true \u914d\u7f6e\u7684\u4f5c\u7528",type:"info"},(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"This property will register an\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"OpenEntityManagerInViewInterceptor"),", which registers an\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"EntityManager"),"\xa0to the current thread, so you will have the same\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"EntityManager"),"\xa0until the web request is finished. It has nothing to do with a Hibernate\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"SessionFactory"),"\xa0etc."))),(0,r.kt)("h2",{id:"\u4f7f\u7528\u573a\u666f"},"\u4f7f\u7528\u573a\u666f"),(0,r.kt)("p",null,"\u5982\u679c\u4e0d\u5efa\u8bae\u5f00\u542f\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u4ec0\u4e48\u5462\uff1f\u6216\u8005\u8bf4\u5b83\u7684\u4f7f\u7528\u573a\u666f\u6709\u54ea\u4e9b\uff1f"),(0,r.kt)("p",null,"1\uff09\u5173\u8054\u67e5\u8be2\u65f6 \u61d2\u52a0\u8f7d\n2\uff09\u63d0\u5347\u6570\u636e\u5e93\u6027\u80fd\uff0c\u4e0d\u7528\u9891\u7e41\u7684\u521b\u5efa\u548c\u5173\u95ed\u8fde\u63a5"),(0,r.kt)("p",null,"Hinernate \u4e2d\u7684 lazy \u548c eager \u52a0\u8f7d\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://www.baeldung.com/hibernate-lazy-eager-loading"},"https://www.baeldung.com/hibernate-lazy-eager-loading")),(0,r.kt)("h2",{id:"\u5c0f\u7ed3"},"\u5c0f\u7ed3"),(0,r.kt)("p",null,"\u901a\u8fc7OSIV\u6280\u672f\u6765\u89e3\u51b3LazyInitialization\u95ee\u9898\u4f1a\u5bfc\u81f4open\u7684session\u751f\u547d\u5468\u671f\u8fc7\u957f\uff0c\u5b83\u8d2f\u7a7f\u6574\u4e2arequest\uff0c\u5728view\u6e32\u67d3\u5b8c\u4e4b\u540e\u624d\u80fd\u5173\u95edsession\u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5\uff1b\u53e6\u5916OSIV\u5c06service\u5c42\u7684\u6280\u672f\u7ec6\u8282\u66b4\u9732\u5230\u4e86controller\u5c42\uff0c\u9020\u6210\u4e86\u4e00\u5b9a\u7684\u8026\u5408\uff0c\u56e0\u800c\u4e0d\u5efa\u8bae\u5f00\u542f\uff0c\u5bf9\u5e94\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5728controller\u5c42\u4e2d\u4f7f\u7528dto\uff0c\u800c\u975edetached\u72b6\u6001\u7684entity\uff0c\u6240\u9700\u7684\u6570\u636e\u4e0d\u518d\u4f9d\u8d56\u5ef6\u65f6\u52a0\u8f7d\uff0c\u5728\u7ec4\u88c5dto\u7684\u65f6\u5019\u6839\u636e\u9700\u8981\u663e\u5f0f\u67e5\u8be2\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Here's what happens while the OSIV is enabled:"),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"At the beginning of the request, the corresponding filter creates a new\xa0",(0,r.kt)("em",{parentName:"li"},"Session"),"."),(0,r.kt)("li",{parentName:"ol"},"When we call the\xa0",(0,r.kt)("em",{parentName:"li"},"findByUsername"),"\xa0method, that\xa0",(0,r.kt)("em",{parentName:"li"},"Session"),"\xa0borrows a\xa0",(0,r.kt)("em",{parentName:"li"},"Connection"),"\xa0from the pool."),(0,r.kt)("li",{parentName:"ol"},"The\xa0",(0,r.kt)("em",{parentName:"li"},"Session"),"\xa0remains connected until the end of the request."))),(0,r.kt)("p",null,"\u5f53\u542f\u7528\u8be5\u53c2\u6570\u540e\uff0c\u8bf7\u6c42\u4f1a\u4e00\u76f4\u6301\u6709\u8be5\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u4e00\u76f4\u5230\u8bf7\u6c42\u7ed3\u675f\u3002\u7279\u522b\u5bf9\u4e8e\u8017\u65f6\u7684\u8bf7\u6c42\uff0c\u4f1a\u5bfc\u81f4\u8bf7\u6c42\u8fde\u63a5\u957f\u65f6\u95f4\u65e0\u6cd5\u91ca\u653e\uff0c\u66f4\u7cdf\u7cd5\u7684\u662f\u6709\u53ef\u80fd\u4f1a\u8017\u5c3d \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3002"),(0,r.kt)("p",null,"JPA \u914d\u7f6e\u8bf4\u660e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"spring:\n  jpa:\n    hibernate:\n      ddl-auto: none\n    show-sql: false\n    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect\n    open-in-view: false\n    properties:\n      hibernate:\n        # \u663e\u793aSQL\n        show_sql: true\n        # \u5c06\u6ce8\u91ca\u653e\u5165\u6240\u6709\u751f\u6210\u7684SQL\u8bed\u53e5\u4e2d\uff0c\u4ee5\u63d0\u793a\u751f\u6210\u7684SQL\u8bd5\u56fe\u505a\u4ec0\u4e48\n        use_sql_comments: false\n        # \u683c\u5f0f\u5316\u63a7\u5236\u53f0\u7684SQL\n        format_sql: true\n\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A Guide to Spring\u2019s Open Session In View\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://www.baeldung.com/spring-open-session-in-view"},"https://www.baeldung.com/spring-open-session-in-view")),(0,r.kt)("li",{parentName:"ul"},"What is this spring.jpa.open-in-view=true property in Spring Boot?\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot"},"https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot")),(0,r.kt)("li",{parentName:"ul"},"\u804a\u804aspring data jpa\u7684OpenSessionInView\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://cloud.tencent.com/developer/article/1413332"},"https://cloud.tencent.com/developer/article/1413332"))))}u.isMDXComponent=!0},33286:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/20230416175943-417df4b1e738c775bb7fbe3b4a1bfcaf.png"}}]);
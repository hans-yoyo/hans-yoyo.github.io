"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9696],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>g});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return a?t.createElement(m,l(l({ref:n},p),{},{components:a})):t.createElement(m,l({ref:n},p))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8687:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const i={slug:"java-spi",id:"Java-SPI\u673a\u5236",title:"Java-SPI\u673a\u5236",tags:["Java"],last_update:{date:new Date("2022-11-12T00:00:00.000Z"),author:"Hans"}},l=void 0,o={unversionedId:"java/java-basis/Java-SPI\u673a\u5236",id:"java/java-basis/Java-SPI\u673a\u5236",title:"Java-SPI\u673a\u5236",description:"\u8f6c\u81ea\uff1ahttps://www.pdai.tech/md/java/advanced/java-advanced-spi.html",source:"@site/wiki/programming-language/java/java-basis/6.Java-SPI\u673a\u5236.md",sourceDirName:"java/java-basis",slug:"/java/java-basis/java-spi",permalink:"/programming-language/java/java-basis/java-spi",draft:!1,tags:[{label:"Java",permalink:"/programming-language/tags/java"}],version:"current",lastUpdatedBy:"Hans",lastUpdatedAt:1668211200,formattedLastUpdatedAt:"2022\u5e7411\u670812\u65e5",sidebarPosition:6,frontMatter:{slug:"java-spi",id:"Java-SPI\u673a\u5236",title:"Java-SPI\u673a\u5236",tags:["Java"],last_update:{date:"2022-11-12T00:00:00.000Z",author:"Hans"}},sidebar:"tutorialSidebar",previous:{title:"Java\u5f02\u5e38",permalink:"/programming-language/java/java-basis/java-exception"},next:{title:"Java\u53cd\u5c04\u673a\u5236",permalink:"/programming-language/java/java-basis/java-reflection"}},s={},c=[{value:"\u4ec0\u4e48\u662fSPI",id:"\u4ec0\u4e48\u662fspi",level:2},{value:"SPI \u7b80\u5355\u793a\u4f8b",id:"spi-\u7b80\u5355\u793a\u4f8b",level:2},{value:"SPI\u673a\u5236\u7684\u5e94\u7528",id:"spi\u673a\u5236\u7684\u5e94\u7528",level:2},{value:"SPI\u673a\u5236 - JDBC DriverManager",id:"spi\u673a\u5236---jdbc-drivermanager",level:3},{value:"SPI\u673a\u5236 - Common-Logging",id:"spi\u673a\u5236---common-logging",level:3},{value:"SPI\u673a\u5236 - \u63d2\u4ef6\u4f53\u7cfb",id:"spi\u673a\u5236---\u63d2\u4ef6\u4f53\u7cfb",level:3},{value:"SPI\u673a\u5236 - Spring\u4e2d\u7684SPI\u673a\u5236",id:"spi\u673a\u5236---spring\u4e2d\u7684spi\u673a\u5236",level:3},{value:"SPI\u673a\u5236\u6df1\u5165\u7406\u89e3",id:"spi\u673a\u5236\u6df1\u5165\u7406\u89e3",level:2},{value:"SPI\u673a\u5236\u901a\u5e38\u600e\u4e48\u4f7f\u7528",id:"spi\u673a\u5236\u901a\u5e38\u600e\u4e48\u4f7f\u7528",level:3},{value:"SPI\u548cAPI\u7684\u533a\u522b",id:"spi\u548capi\u7684\u533a\u522b",level:3},{value:"SPI\u673a\u5236\u5b9e\u73b0\u539f\u7406",id:"spi\u673a\u5236\u5b9e\u73b0\u539f\u7406",level:3},{value:"SPI\u673a\u5236\u7684\u7f3a\u9677",id:"spi\u673a\u5236\u7684\u7f3a\u9677",level:3}],p={toc:c};function u(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u8f6c\u81ea\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://www.pdai.tech/md/java/advanced/java-advanced-spi.html"},"https://www.pdai.tech/md/java/advanced/java-advanced-spi.html")),(0,r.kt)("h2",{id:"\u4ec0\u4e48\u662fspi"},"\u4ec0\u4e48\u662fSPI"),(0,r.kt)("p",null,"Service Provider Interface, \u662fJDK\u5185\u7f6e\u7684\u4e00\u79cd \u670d\u52a1\u63d0\u4f9b\u53d1\u73b0\u673a\u5236\uff0c\u53ef\u4ee5\u7528\u6765\u542f\u7528\u6846\u67b6\u6269\u5c55\u548c\u66ff\u6362\u7ec4\u4ef6\u3002\u6bd4\u5982java.sql.Driver\u63a5\u53e3\uff0c\u5176\u4ed6\u4e0d\u540c\u5382\u5546\u53ef\u4ee5\u9488\u5bf9\u540c\u4e00\u63a5\u53e3\u505a\u51fa\u4e0d\u540c\u7684\u5b9e\u73b0\uff0cMySQL\u548cPostgreSQL\u90fd\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u63d0\u4f9b\u7ed9\u7528\u6237\uff0c\u800cJava\u7684SPI\u673a\u5236\u53ef\u4ee5\u4e3a\u67d0\u4e2a\u63a5\u53e3\u5bfb\u627e\u670d\u52a1\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"Java\u4e2dSPI\u673a\u5236\u4e3b\u8981\u601d\u60f3\u662f",(0,r.kt)("strong",{parentName:"p"},"\u5c06\u88c5\u914d\u7684\u63a7\u5236\u6743\u79fb\u5230\u7a0b\u5e8f\u4e4b\u5916"),"\uff0c\u5728\u6a21\u5757\u5316\u8bbe\u8ba1\u4e2d\u8fd9\u4e2a\u673a\u5236\u5c24\u5176\u91cd\u8981\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f ",(0,r.kt)("strong",{parentName:"p"},"\u89e3\u8026"),"\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SPI\u6574\u4f53\u673a\u5236\u56fe")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://file.huhan.tech/images/202207042300667.jpeg",alt:null})),(0,r.kt)("p",null,"\u5f53\u670d\u52a1\u7684\u63d0\u4f9b\u8005\u63d0\u4f9b\u4e86\u4e00\u79cd\u63a5\u53e3\u7684\u5b9e\u73b0\u4e4b\u540e\uff0c\u9700\u8981\u5728classpath\u4e0b\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/services/"),"\u76ee\u5f55\u91cc\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("strong",{parentName:"p"},"\u4ee5\u670d\u52a1\u63a5\u53e3\u547d\u540d"),"\u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a",(0,r.kt)("strong",{parentName:"p"},"\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\u5c31\u662f\u8fd9\u4e2a\u63a5\u53e3\u7684\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b"),"\u3002\n\u5f53\u5176\u4ed6\u7684\u7a0b\u5e8f\u9700\u8981\u8fd9\u4e2a\u670d\u52a1\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u67e5\u627e\u8fd9\u4e2ajar\u5305\uff08\u4e00\u822c\u90fd\u662f\u4ee5jar\u5305\u505a\u4f9d\u8d56\uff09\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/services/"),"\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u540d\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7c7b\u540d\u8fdb\u884c\u52a0\u8f7d\u5b9e\u4f8b\u5316\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8be5\u670d\u52a1\u4e86\u3002",(0,r.kt)("strong",{parentName:"p"},"JDK\u4e2d\u67e5\u627e\u670d\u52a1\u7684\u5b9e\u73b0\u7684\u5de5\u5177\u7c7b\u662f\uff1a",(0,r.kt)("inlineCode",{parentName:"strong"},"java.util.ServiceLoader"),"\u3002")),(0,r.kt)("h2",{id:"spi-\u7b80\u5355\u793a\u4f8b"},"SPI \u7b80\u5355\u793a\u4f8b"),(0,r.kt)("p",null,"\u6211\u4eec\u73b0\u5728\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5185\u5bb9\u641c\u7d22\u63a5\u53e3\uff0c\u641c\u7d22\u7684\u5b9e\u73b0\u53ef\u80fd\u662f\u57fa\u4e8e\u6587\u4ef6\u7cfb\u7edf\u7684\u641c\u7d22\uff0c\u4e5f\u53ef\u80fd\u662f\u57fa\u4e8e\u6570\u636e\u5e93\u7684\u641c\u7d22\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u597d\u63a5\u53e3")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Search {\n    List<String> searchDoc(String keyWork);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6587\u4ef6\u641c\u7d22\u5b9e\u73b0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class FileSearch implements Search {\n\n    @Override\n    public List<String> searchDoc(String keyWork) {\n        System.out.println("\u6587\u4ef6\u641c\u7d22, keyword = " + keyWork);\n        return null;\n    }\n    \n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6570\u636e\u5e93\u641c\u7d22\u5b9e\u73b0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class DatabaseSearch implements Search {\n    @Override\n    public List<String> searchDoc(String keyWork) {\n        System.out.println("\u6570\u636e\u641c\u7d22, keyword = " + keyWork);\n        return null;\n    }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5728resources\u4e0b\u65b0\u5efaMETA-INF/services/\u76ee\u5f55\uff0c\u7136\u540e\u65b0\u5efa\u63a5\u53e3\u5168\u9650\u5b9a\u540d\u7684\u6587\u4ef6\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"io.hans.coder.basis.spi.Search"),"\uff0c\u91cc\u9762\u52a0\u4e0a\u6211\u4eec\u9700\u8981\u7528\u5230\u7684\u5b9e\u73b0\u7c7b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"io.hans.coder.basis.spi.FileSearch\n#io.hans.coder.basis.spi.DatabaseSearch\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://file.huhan.tech/images/202207042301909.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6d4b\u8bd5\u7c7b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    ServiceLoader<Search> loader = ServiceLoader.load(Search.class);\n    Iterator<Search> iterator = loader.iterator();\n    while (iterator.hasNext()) {\n        iterator.next().searchDoc("hello spi");\n    }\n}\n')),(0,r.kt)("h2",{id:"spi\u673a\u5236\u7684\u5e94\u7528"},"SPI\u673a\u5236\u7684\u5e94\u7528"),(0,r.kt)("h3",{id:"spi\u673a\u5236---jdbc-drivermanager"},"SPI\u673a\u5236 - JDBC DriverManager"),(0,r.kt)("p",null,'\u5728JDBC4.0\u4e4b\u524d\uff0c\u6211\u4eec\u5f00\u53d1\u6709\u8fde\u63a5\u6570\u636e\u5e93\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4f1a\u7528Class.forName("com.mysql.jdbc.Driver")\u8fd9\u53e5\u5148\u52a0\u8f7d\u6570\u636e\u5e93\u76f8\u5173\u7684\u9a71\u52a8\uff0c\u7136\u540e\u518d\u8fdb\u884c\u83b7\u53d6\u8fde\u63a5\u7b49\u7684\u64cd\u4f5c\u3002',(0,r.kt)("strong",{parentName:"p"},'\u800cJDBC4.0\u4e4b\u540e\u4e0d\u9700\u8981\u7528Class.forName("com.mysql.jdbc.Driver")\u6765\u52a0\u8f7d\u9a71\u52a8\uff0c\u76f4\u63a5\u83b7\u53d6\u8fde\u63a5\u5c31\u53ef\u4ee5\u4e86\uff0c\u73b0\u5728\u8fd9\u79cd\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528\u4e86Java\u7684SPI\u6269\u5c55\u673a\u5236\u6765\u5b9e\u73b0'),"\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JDBC\u63a5\u53e3\u5b9a\u4e49")),(0,r.kt)("p",null,"\u9996\u5148\u5728java\u4e2d\u5b9a\u4e49\u4e86\u63a5\u53e3",(0,r.kt)("inlineCode",{parentName:"p"},"java.sql.Driver"),"\uff0c\u5e76\u6ca1\u6709\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u90fd\u662f\u7531\u4e0d\u540c\u5382\u5546\u6765\u63d0\u4f9b\u7684"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MySQL\u5b9e\u73b0")),(0,r.kt)("p",null,"\u5728mysql\u7684jar\u5305",(0,r.kt)("inlineCode",{parentName:"p"},"mysql-connector-java-8.0.15.jar"),"\u4e2d\uff0c\u53ef\u4ee5\u627e\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/services"),"\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u4f1a\u6709\u4e00\u4e2a\u540d\u5b57\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"java.sql.Driver"),"\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u5bb9\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"com.mysql.cj.jdbc.Driver"),"\uff0c\u8fd9\u91cc\u9762\u7684\u5185\u5bb9\u5c31\u662f\u9488\u5bf9Java\u4e2d\u5b9a\u4e49\u7684\u63a5\u53e3\u7684\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://file.huhan.tech/images/202207042301496.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u4f7f\u7528\u65b9\u6cd5")),(0,r.kt)("p",null,"\u73b0\u5728\u4f7f\u7528SPI\u6269\u5c55\u6765\u52a0\u8f7d\u5177\u4f53\u7684\u9a71\u52a8\uff0c\u6211\u4eec\u5728Java\u4e2d\u5199\u8fde\u63a5\u6570\u636e\u5e93\u7684\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u518d\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},'Class.forName("com.mysql.cj.jdbc.Driver")'),"\u6765\u52a0\u8f7d\u9a71\u52a8\u4e86\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String url = "jdbc:xxxx://xxxx:xxxx/xxxx";\nConnection conn = DriverManager.getConnection(url,username,password);\n.....\n  \n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6e90\u7801\u5b9e\u73b0")),(0,r.kt)("p",null,"\u5173\u4e8e\u9a71\u52a8\u7684\u67e5\u627e\u5176\u5b9e\u90fd\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"DriverManager"),"\u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"DriverManager"),"\u662fJava\u4e2d\u7684\u5b9e\u73b0\uff0c\u7528\u6765\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"DriverManager"),"\u4e2d\u6709\u4e00\u4e2a\u9759\u6001\u4ee3\u7801\u5757\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'    static {\n        loadInitialDrivers();\n        println("JDBC DriverManager initialized");\n    }\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},' private static void loadInitialDrivers() {\n     String drivers;\n     try {\n         drivers = AccessController.doPrivileged(new PrivilegedAction<String>() {\n             public String run() {\n                 return System.getProperty("jdbc.drivers");\n             }\n         });\n     } catch (Exception ex) {\n         drivers = null;\n     }\n\n     AccessController.doPrivileged(new PrivilegedAction<Void>() {\n         public Void run() {\n\n             // \u4f7f\u7528SPI\u7684ServiceLoader\u6765\u52a0\u8f7d\u63a5\u53e3\u7684\u5b9e\u73b0\n             ServiceLoader<Driver> loadedDrivers = ServiceLoader.load(Driver.class);\n             Iterator<Driver> driversIterator = loadedDrivers.iterator();\n             \n             try{\n                 while(driversIterator.hasNext()) {\n                     driversIterator.next();\n                 }\n             } catch(Throwable t) {\n                 // Do nothing\n             }\n             return null;\n         }\n     });\n\n     println("DriverManager.initialize: jdbc.drivers = " + drivers);\n\n     if (drivers == null || drivers.equals("")) {\n         return;\n     }\n     String[] driversList = drivers.split(":");\n     println("number of Drivers:" + driversList.length);\n     for (String aDriver : driversList) {\n         try {\n             println("DriverManager.Initialize: loading " + aDriver);\n             Class.forName(aDriver, true,\n                           ClassLoader.getSystemClassLoader());\n         } catch (Exception ex) {\n             println("DriverManager.Initialize: load failed: " + ex);\n         }\n     }\n }\n')),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u6b65\u9aa4\u662f\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ece\u7cfb\u7edf\u53d8\u91cf\u4e2d\u83b7\u53d6\u6709\u5173\u9a71\u52a8\u7684\u5b9a\u4e49\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528SPI\u6765\u83b7\u53d6\u9a71\u52a8\u7684\u5b9e\u73b0\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u904d\u5386\u4f7f\u7528SPI\u83b7\u53d6\u5230\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5b9e\u4f8b\u5316\u5404\u4e2a\u5b9e\u73b0\u7c7b\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u6839\u636e\u7b2c\u4e00\u6b65\u83b7\u53d6\u5230\u7684\u9a71\u52a8\u5217\u8868\u6765\u5b9e\u4f8b\u5316\u5177\u4f53\u5b9e\u73b0\u7c7b\u3002")),(0,r.kt)("h3",{id:"spi\u673a\u5236---common-logging"},"SPI\u673a\u5236 - Common-Logging"),(0,r.kt)("p",null,"common-logging\uff08\u4e5f\u79f0Jakarta Commons Logging\uff0c\u7f29\u5199 JCL\uff09\u662f\u5e38\u7528\u7684\u65e5\u5fd7\u5e93\u95e8\u9762"),(0,r.kt)("p",null,"\u65e5\u5fd7\u5b9e\u4f8b\u662f\u901a\u8fc7LogFactory\u7684getLog(String)\u65b9\u6cd5\u521b\u5efa\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static Log getLog(String name) throws LogConfigurationException {\n    return getFactory().getInstance(name);\n}\n")),(0,r.kt)("p",null,"LogFatory\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u8d1f\u8d23\u52a0\u8f7d\u5177\u4f53\u7684\u65e5\u5fd7\u5b9e\u73b0"),(0,r.kt)("p",null,"\u62bd\u8c61\u7c7bLogFactory\u52a0\u8f7d\u5177\u4f53\u5b9e\u73b0\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ecevm\u7cfb\u7edf\u5c5e\u6027org.apache.commons.logging.LogFactory"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528SPI\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u53d1\u73b0org.apache.commons.logging.LogFactory\u7684\u5b9e\u73b0"),(0,r.kt)("li",{parentName:"ul"},"\u67e5\u627eclasspath\u6839\u76ee\u5f55commons-logging.properties\u7684org.apache.commons.logging.LogFactory\u5c5e\u6027\u662f\u5426\u6307\u5b9afactory\u5b9e\u73b0"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u9ed8\u8ba4factory\u5b9e\u73b0\uff0corg.apache.commons.logging.impl.LogFactoryImpl")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static LogFactory getFactory() throws LogConfigurationException {\n        // Identify the class loader we will be using\n        ClassLoader contextClassLoader = getContextClassLoaderInternal();\n\n        if (contextClassLoader == null) {\n            // This is an odd enough situation to report about. This\n            // output will be a nuisance on JDK1.1, as the system\n            // classloader is null in that environment.\n            if (isDiagnosticsEnabled()) {\n                logDiagnostic("Context classloader is null.");\n            }\n        }\n\n        // Return any previously registered factory for this class loader\n        LogFactory factory = getCachedFactory(contextClassLoader);\n        if (factory != null) {\n            return factory;\n        }\n\n        if (isDiagnosticsEnabled()) {\n            logDiagnostic(\n                    "[LOOKUP] LogFactory implementation requested for the first time for context classloader " +\n                    objectId(contextClassLoader));\n            logHierarchy("[LOOKUP] ", contextClassLoader);\n        }\n\n        // Load properties file.\n        //\n        // If the properties file exists, then its contents are used as\n        // "attributes" on the LogFactory implementation class. One particular\n        // property may also control which LogFactory concrete subclass is\n        // used, but only if other discovery mechanisms fail..\n        //\n        // As the properties file (if it exists) will be used one way or\n        // another in the end we may as well look for it first.\n        // classpath\u6839\u76ee\u5f55\u4e0b\u5bfb\u627ecommons-logging.properties\n        Properties props = getConfigurationFile(contextClassLoader, FACTORY_PROPERTIES);\n\n        // Determine whether we will be using the thread context class loader to\n        // load logging classes or not by checking the loaded properties file (if any).\n        // classpath\u6839\u76ee\u5f55\u4e0bcommons-logging.properties\u662f\u5426\u914d\u7f6euse_tccl\n        ClassLoader baseClassLoader = contextClassLoader;\n        if (props != null) {\n            String useTCCLStr = props.getProperty(TCCL_KEY);\n            if (useTCCLStr != null) {\n                // The Boolean.valueOf(useTCCLStr).booleanValue() formulation\n                // is required for Java 1.2 compatibility.\n                if (Boolean.valueOf(useTCCLStr).booleanValue() == false) {\n                    // Don\'t use current context classloader when locating any\n                    // LogFactory or Log classes, just use the class that loaded\n                    // this abstract class. When this class is deployed in a shared\n                    // classpath of a container, it means webapps cannot deploy their\n                    // own logging implementations. It also means that it is up to the\n                    // implementation whether to load library-specific config files\n                    // from the TCCL or not.\n                    baseClassLoader = thisClassLoader;\n                }\n            }\n        }\n\n        // Determine which concrete LogFactory subclass to use.\n        // First, try a global system property\n        // \u9996\u5148\uff0c\u5c1d\u8bd5\u67e5\u627evm\u7cfb\u7edf\u5c5e\u6027org.apache.commons.logging.LogFactory\uff0c\u5176\u662f\u5426\u6307\u5b9afactory\n        if (isDiagnosticsEnabled()) {\n            logDiagnostic("[LOOKUP] Looking for system property [" + FACTORY_PROPERTY +\n                          "] to define the LogFactory subclass to use...");\n        }\n\n        try {\n            String factoryClass = getSystemProperty(FACTORY_PROPERTY, null);\n            if (factoryClass != null) {\n                if (isDiagnosticsEnabled()) {\n                    logDiagnostic("[LOOKUP] Creating an instance of LogFactory class \'" + factoryClass +\n                                  "\' as specified by system property " + FACTORY_PROPERTY);\n                }\n                factory = newFactory(factoryClass, baseClassLoader, contextClassLoader);\n            } else {\n                if (isDiagnosticsEnabled()) {\n                    logDiagnostic("[LOOKUP] No system property [" + FACTORY_PROPERTY + "] defined.");\n                }\n            }\n        } catch (SecurityException e) {\n            if (isDiagnosticsEnabled()) {\n                logDiagnostic("[LOOKUP] A security exception occurred while trying to create an" +\n                              " instance of the custom factory class" + ": [" + trim(e.getMessage()) +\n                              "]. Trying alternative implementations...");\n            }\n            // ignore\n        } catch (RuntimeException e) {\n            // This is not consistent with the behaviour when a bad LogFactory class is\n            // specified in a services file.\n            //\n            // One possible exception that can occur here is a ClassCastException when\n            // the specified class wasn\'t castable to this LogFactory type.\n            if (isDiagnosticsEnabled()) {\n                logDiagnostic("[LOOKUP] An exception occurred while trying to create an" +\n                              " instance of the custom factory class" + ": [" +\n                              trim(e.getMessage()) +\n                              "] as specified by a system property.");\n            }\n            throw e;\n        }\n\n        // \u7b2c\u4e8c\uff0c\u5c1d\u8bd5\u4f7f\u7528java spi\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u8f7dMETA-INF/services\u4e0b\u5bfb\u627eorg.apache.commons.logging.LogFactory\u5b9e\u73b0\n        // Second, try to find a service by using the JDK1.3 class\n        // discovery mechanism, which involves putting a file with the name\n        // of an interface class in the META-INF/services directory, where the\n        // contents of the file is a single line specifying a concrete class\n        // that implements the desired interface.\n\n        if (factory == null) {\n            if (isDiagnosticsEnabled()) {\n                logDiagnostic("[LOOKUP] Looking for a resource file of name [" + SERVICE_ID +\n                              "] to define the LogFactory subclass to use...");\n            }\n            try {\n                final InputStream is = getResourceAsStream(contextClassLoader, SERVICE_ID);\n\n                if( is != null ) {\n                    // This code is needed by EBCDIC and other strange systems.\n                    // It\'s a fix for bugs reported in xerces\n                    BufferedReader rd;\n                    try {\n                        rd = new BufferedReader(new InputStreamReader(is, "UTF-8"));\n                    } catch (java.io.UnsupportedEncodingException e) {\n                        rd = new BufferedReader(new InputStreamReader(is));\n                    }\n\n                    String factoryClassName = rd.readLine();\n                    rd.close();\n\n                    if (factoryClassName != null && ! "".equals(factoryClassName)) {\n                        if (isDiagnosticsEnabled()) {\n                            logDiagnostic("[LOOKUP]  Creating an instance of LogFactory class " +\n                                          factoryClassName +\n                                          " as specified by file \'" + SERVICE_ID +\n                                          "\' which was present in the path of the context classloader.");\n                        }\n                        factory = newFactory(factoryClassName, baseClassLoader, contextClassLoader );\n                    }\n                } else {\n                    // is == null\n                    if (isDiagnosticsEnabled()) {\n                        logDiagnostic("[LOOKUP] No resource file with name \'" + SERVICE_ID + "\' found.");\n                    }\n                }\n            } catch (Exception ex) {\n                // note: if the specified LogFactory class wasn\'t compatible with LogFactory\n                // for some reason, a ClassCastException will be caught here, and attempts will\n                // continue to find a compatible class.\n                if (isDiagnosticsEnabled()) {\n                    logDiagnostic(\n                        "[LOOKUP] A security exception occurred while trying to create an" +\n                        " instance of the custom factory class" +\n                        ": [" + trim(ex.getMessage()) +\n                        "]. Trying alternative implementations...");\n                }\n                // ignore\n            }\n        }\n\n        // \u7b2c\u4e09\uff0c\u5c1d\u8bd5\u4ececlasspath\u6839\u76ee\u5f55\u4e0b\u7684commons-logging.properties\u4e2d\u67e5\u627eorg.apache.commons.logging.LogFactory\u5c5e\u6027\u6307\u5b9a\u7684factory\n        // Third try looking into the properties file read earlier (if found)\n\n        if (factory == null) {\n            if (props != null) {\n                if (isDiagnosticsEnabled()) {\n                    logDiagnostic(\n                        "[LOOKUP] Looking in properties file for entry with key \'" + FACTORY_PROPERTY +\n                        "\' to define the LogFactory subclass to use...");\n                }\n                String factoryClass = props.getProperty(FACTORY_PROPERTY);\n                if (factoryClass != null) {\n                    if (isDiagnosticsEnabled()) {\n                        logDiagnostic(\n                            "[LOOKUP] Properties file specifies LogFactory subclass \'" + factoryClass + "\'");\n                    }\n                    factory = newFactory(factoryClass, baseClassLoader, contextClassLoader);\n\n                    // TODO: think about whether we need to handle exceptions from newFactory\n                } else {\n                    if (isDiagnosticsEnabled()) {\n                        logDiagnostic("[LOOKUP] Properties file has no entry specifying LogFactory subclass.");\n                    }\n                }\n            } else {\n                if (isDiagnosticsEnabled()) {\n                    logDiagnostic("[LOOKUP] No properties file available to determine" + " LogFactory subclass from..");\n                }\n            }\n        }\n\n        // \u6700\u540e\uff0c\u4f7f\u7528\u540e\u5907factory\u5b9e\u73b0\uff0corg.apache.commons.logging.impl.LogFactoryImpl\n        // Fourth, try the fallback implementation class\n\n        if (factory == null) {\n            if (isDiagnosticsEnabled()) {\n                logDiagnostic(\n                    "[LOOKUP] Loading the default LogFactory implementation \'" + FACTORY_DEFAULT +\n                    "\' via the same classloader that loaded this LogFactory" +\n                    " class (ie not looking in the context classloader).");\n            }\n\n            // Note: unlike the above code which can try to load custom LogFactory\n            // implementations via the TCCL, we don\'t try to load the default LogFactory\n            // implementation via the context classloader because:\n            // * that can cause problems (see comments in newFactory method)\n            // * no-one should be customising the code of the default class\n            // Yes, we do give up the ability for the child to ship a newer\n            // version of the LogFactoryImpl class and have it used dynamically\n            // by an old LogFactory class in the parent, but that isn\'t\n            // necessarily a good idea anyway.\n            factory = newFactory(FACTORY_DEFAULT, thisClassLoader, contextClassLoader);\n        }\n\n        if (factory != null) {\n            /**\n             * Always cache using context class loader.\n             */\n            cacheFactory(contextClassLoader, factory);\n\n            if (props != null) {\n                Enumeration names = props.propertyNames();\n                while (names.hasMoreElements()) {\n                    String name = (String) names.nextElement();\n                    String value = props.getProperty(name);\n                    factory.setAttribute(name, value);\n                }\n            }\n        }\n\n        return factory;\n    }\n')),(0,r.kt)("h3",{id:"spi\u673a\u5236---\u63d2\u4ef6\u4f53\u7cfb"},"SPI\u673a\u5236 - \u63d2\u4ef6\u4f53\u7cfb"),(0,r.kt)("p",null,"\u5176\u5b9e\u6700\u5177spi\u601d\u60f3\u7684\u5e94\u8be5\u5c5e\u4e8e\u63d2\u4ef6\u5f00\u53d1\uff0c\u8fd9\u91cc\u5177\u4f53\u8bf4\u4e00\u4e0beclipse\u7684\u63d2\u4ef6\u601d\u60f3\u3002"),(0,r.kt)("p",null,"Eclipse\u4f7f\u7528OSGi\u4f5c\u4e3a\u63d2\u4ef6\u7cfb\u7edf\u7684\u57fa\u7840\uff0c\u52a8\u6001\u6dfb\u52a0\u65b0\u63d2\u4ef6\u548c\u505c\u6b62\u73b0\u6709\u63d2\u4ef6\uff0c\u4ee5\u52a8\u6001\u7684\u65b9\u5f0f\u7ba1\u7406\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u4ef6\u7684\u6587\u4ef6\u7ed3\u6784\u5fc5\u987b\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u6587\u4ef6\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"META-INF/MANIFEST.MF"),": \u9879\u76ee\u57fa\u672c\u914d\u7f6e\u4fe1\u606f\uff0c\u7248\u672c\u3001\u540d\u79f0\u3001\u542f\u52a8\u5668\u7b49"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build.properties"),": \u9879\u76ee\u7684\u7f16\u8bd1\u914d\u7f6e\u4fe1\u606f\uff0c\u5305\u62ec\uff0c\u6e90\u4ee3\u7801\u8def\u5f84\u3001\u8f93\u51fa\u8def\u5f84"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"plugin.xml"),"\uff1a\u63d2\u4ef6\u7684\u64cd\u4f5c\u914d\u7f6e\u4fe1\u606f\uff0c\u5305\u542b\u5f39\u51fa\u83dc\u5355\u53ca\u70b9\u51fb\u83dc\u5355\u540e\u5bf9\u5e94\u7684\u64cd\u4f5c\u6267\u884c\u7c7b\u7b49")),(0,r.kt)("p",null,"\u5f53eclipse\u542f\u52a8\u65f6\uff0c\u4f1a\u904d\u5386plugins\u6587\u4ef6\u5939\u4e2d\u7684\u76ee\u5f55\uff0c\u626b\u63cf\u6bcf\u4e2a\u63d2\u4ef6\u7684\u6e05\u5355\u6587\u4ef6",(0,r.kt)("inlineCode",{parentName:"p"},"MANIFEST.MF"),"\uff0c\u5e76\u5efa\u7acb\u4e00\u4e2a\u5185\u90e8\u6a21\u578b\u6765\u8bb0\u5f55\u5b83\u6240\u627e\u5230\u7684\u6bcf\u4e2a\u63d2\u4ef6\u7684\u4fe1\u606f\uff0c\u5c31\u5b9e\u73b0\u4e86\u52a8\u6001\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u3002\n\u8fd9\u4e5f\u610f\u5473\u7740\u662feclipse\u5236\u5b9a\u4e86\u4e00\u7cfb\u5217\u7684\u89c4\u5219\uff0c\u50cf\u662f\u6587\u4ef6\u7ed3\u6784\u3001\u7c7b\u578b\u3001\u53c2\u6570\u7b49\u3002\u63d2\u4ef6\u5f00\u53d1\u8005\u9075\u5faa\u8fd9\u4e9b\u89c4\u5219\u53bb\u5f00\u53d1\u81ea\u5df1\u7684\u63d2\u4ef6\uff0ceclipse\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u63d2\u4ef6\u5177\u4f53\u662f\u600e\u6837\u5f00\u53d1\u7684\uff0c\u53ea\u9700\u8981\u5728\u542f\u52a8\u7684\u65f6\u5019\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u3001\u52a0\u8f7d\u5230\u7cfb\u7edf\u91cc\u5c31\u597d\u4e86\uff0c\u662fspi\u601d\u60f3\u7684\u4e00\u79cd\u4f53\u73b0\u3002"),(0,r.kt)("h3",{id:"spi\u673a\u5236---spring\u4e2d\u7684spi\u673a\u5236"},"SPI\u673a\u5236 - Spring\u4e2d\u7684SPI\u673a\u5236"),(0,r.kt)("p",null,"\u5728springboot\u7684\u81ea\u52a8\u88c5\u914d\u8fc7\u7a0b\u4e2d\uff0c\u6700\u7ec8\u4f1a\u52a0\u8f7d",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/spring.factories"),"\u6587\u4ef6\uff0c\u800c\u52a0\u8f7d\u7684\u8fc7\u7a0b\u662f\u7531",(0,r.kt)("inlineCode",{parentName:"p"},"SpringFactoriesLoader"),"\u52a0\u8f7d\u7684\u3002\u4eceCLASSPATH\u4e0b\u7684\u6bcf\u4e2aJar\u5305\u4e2d\u641c\u5bfb\u6240\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/spring.factories"),"\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u89e3\u6790properties\u6587\u4ef6\uff0c\u627e\u5230\u6307\u5b9a\u540d\u79f0\u7684\u914d\u7f6e\u540e\u8fd4\u56de\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5176\u5b9e\u8fd9\u91cc\u4e0d\u4ec5\u4ec5\u662f\u4f1a\u53bbClassPath\u8def\u5f84\u4e0b\u67e5\u627e\uff0c\u4f1a\u626b\u63cf\u6240\u6709\u8def\u5f84\u4e0b\u7684Jar\u5305\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u6587\u4ef6\u53ea\u4f1a\u5728Classpath\u4e0b\u7684jar\u5305\u4e2d\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://file.huhan.tech/images/202207042302976.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    protected List<String> getAutoConfigurations() {\n        if (this.autoConfigurations == null) {\n            // \u627e\u5230\u6240\u6709starter\u4e2dEnableAutoConfiguration\u7684\u5b9e\u73b0\n            this.autoConfigurations = SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,\n                    this.beanClassLoader);\n        }\n        return this.autoConfigurations;\n    }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static final String FACTORIES_RESOURCE_LOCATION = "META-INF/spring.factories";\n\npublic static List<String> loadFactoryNames(Class<?> factoryClass, @Nullable ClassLoader classLoader) {\n    String factoryClassName = factoryClass.getName();\n    return loadSpringFactories(classLoader).getOrDefault(factoryClassName, Collections.emptyList());\n}\n\n// spring.factories\u6587\u4ef6\u7684\u683c\u5f0f\u4e3a\uff1akey=value1,value2,value3\n// \u4ece\u6240\u6709\u7684jar\u5305\u4e2d\u627e\u5230META-INF/spring.factories\u6587\u4ef6\n// \u7136\u540e\u4ece\u6587\u4ef6\u4e2d\u89e3\u6790\u51fakey=factoryClass\u7c7b\u540d\u79f0\u7684\u6240\u6709value\u503c\nprivate static Map<String, List<String>> loadSpringFactories(@Nullable ClassLoader classLoader) {\n    MultiValueMap<String, String> result = cache.get(classLoader);\n    if (result != null) {\n        return result;\n    }\n\n    try {\n        // \u53d6\u5f97\u8d44\u6e90\u6587\u4ef6\u7684URL\n        Enumeration<URL> urls = (classLoader != null ?\n                                 classLoader.getResources(FACTORIES_RESOURCE_LOCATION) :\n                                 ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n        result = new LinkedMultiValueMap<>();\n        while (urls.hasMoreElements()) {\n            URL url = urls.nextElement();\n            UrlResource resource = new UrlResource(url);\n            // \u6839\u636e\u8d44\u6e90\u6587\u4ef6URL\u89e3\u6790properties\u6587\u4ef6\uff0c\u5f97\u5230\u5bf9\u5e94\u7684\u4e00\u7ec4@Configuration\u7c7b\n            Properties properties = PropertiesLoaderUtils.loadProperties(resource);\n            for (Map.Entry<?, ?> entry : properties.entrySet()) {\n                String factoryClassName = ((String) entry.getKey()).trim();\n                for (String factoryName : StringUtils.commaDelimitedListToStringArray((String) entry.getValue())) {\n                    // \u7ec4\u88c5\u6570\u636e\uff0c\u5e76\u8fd4\u56de\n                    result.add(factoryClassName, factoryName.trim());\n                }\n            }\n        }\n        cache.put(classLoader, result);\n        return result;\n    }\n    catch (IOException ex) {\n        throw new IllegalArgumentException("Unable to load factories from location [" +\n                                           FACTORIES_RESOURCE_LOCATION + "]", ex);\n    }\n}\n')),(0,r.kt)("h2",{id:"spi\u673a\u5236\u6df1\u5165\u7406\u89e3"},"SPI\u673a\u5236\u6df1\u5165\u7406\u89e3"),(0,r.kt)("h3",{id:"spi\u673a\u5236\u901a\u5e38\u600e\u4e48\u4f7f\u7528"},"SPI\u673a\u5236\u901a\u5e38\u600e\u4e48\u4f7f\u7528"),(0,r.kt)("p",null,"\u6d41\u7a0b\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6709\u5173\u7ec4\u7ec7\u6216\u8005\u516c\u53f8\u5b9a\u4e49\u6807\u51c6\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5177\u4f53\u5382\u5546\u6216\u8005\u6846\u67b6\u5f00\u53d1\u8005\u5b9e\u73b0\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u733f\u4f7f\u7528\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5b9a\u4e49\u6807\u51c6")),(0,r.kt)("p",null,"\u5b9a\u4e49\u6807\u51c6\uff0c\u5c31\u662f\u5b9a\u4e49\u63a5\u53e3\u3002\u6bd4\u5982\u63a5\u53e3",(0,r.kt)("inlineCode",{parentName:"p"},"java.sql.Driver")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5177\u4f53\u5382\u5546/\u6846\u67b6\u5f00\u53d1\u8005\u5b9e\u73b0")),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/services"),"\u76ee\u5f55\u4e0b\u5b9a\u4e49\u4e00\u4e2a\u540d\u5b57\u4e3a\u63a5\u53e3\u5168\u9650\u5b9a\u540d\u7684\u6587\u4ef6\uff0c\u6bd4\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"java.sql.Driver"),"\u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u5bb9\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u540d\u5b57\uff0c\u6bd4\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"me.cxis.sql.MyDriver"),"\u3002\n\u5199\u5177\u4f53\u7684\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"me.cxis.sql.MyDriver"),"\uff0c\u90fd\u662f\u5bf9\u63a5\u53e3Driver\u7684\u5b9e\u73b0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u7a0b\u5e8f\u5458\u4f7f\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ServiceLoader<Driver> loadedDrivers = ServiceLoader.load(Driver.class);\n//\u83b7\u53d6\u8fed\u4ee3\u5668\nIterator<Driver> driversIterator = loadedDrivers.iterator();\n//\u904d\u5386\nwhile(driversIterator.hasNext()) {\n    driversIterator.next();\n    //\u53ef\u4ee5\u505a\u5177\u4f53\u7684\u4e1a\u52a1\u903b\u8f91\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://file.huhan.tech/images/202207042302453.jpeg",alt:null})),(0,r.kt)("h3",{id:"spi\u548capi\u7684\u533a\u522b"},"SPI\u548cAPI\u7684\u533a\u522b"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"SPI - \u201c\u63a5\u53e3\u201d\u4f4d\u4e8e\u201c\u8c03\u7528\u65b9\u201d\u6240\u5728\u7684\u201c\u5305\u201d\u4e2d")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6982\u5ff5\u4e0a\u66f4\u4f9d\u8d56\u8c03\u7528\u65b9\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u7ec4\u7ec7\u4e0a\u4f4d\u4e8e\u8c03\u7528\u65b9\u6240\u5728\u7684\u5305\u4e2d\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4f4d\u4e8e\u72ec\u7acb\u7684\u5305\u4e2d\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\uff1a\u63d2\u4ef6\u6a21\u5f0f\u7684\u63d2\u4ef6\u3002")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"API - \u201c\u63a5\u53e3\u201d\u4f4d\u4e8e\u201c\u5b9e\u73b0\u65b9\u201d\u6240\u5728\u7684\u201c\u5305\u201d\u4e2d")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6982\u5ff5\u4e0a\u66f4\u63a5\u8fd1\u5b9e\u73b0\u65b9\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u7ec4\u7ec7\u4e0a\u4f4d\u4e8e\u5b9e\u73b0\u65b9\u6240\u5728\u7684\u5305\u4e2d\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u548c\u63a5\u53e3\u5728\u4e00\u4e2a\u5305\u4e2d\u3002")),(0,r.kt)("p",null,"\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/2954372/difference-between-spi-and-api?answertab=votes#tab-top"},"difference-between-spi-and-api(opens new window)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cnblogs.com/happyframework/archive/2013/09/17/3325560.html"},"\u8bbe\u8ba1\u539f\u5219\uff1a\u5c0f\u8bae SPI \u548c API"))),(0,r.kt)("h3",{id:"spi\u673a\u5236\u5b9e\u73b0\u539f\u7406"},"SPI\u673a\u5236\u5b9e\u73b0\u539f\u7406"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ServiceLoader\u6e90\u7801\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//ServiceLoader\u5b9e\u73b0\u4e86Iterable\u63a5\u53e3\uff0c\u53ef\u4ee5\u904d\u5386\u6240\u6709\u7684\u670d\u52a1\u5b9e\u73b0\u8005\npublic final class ServiceLoader<S>\n    implements Iterable<S>\n{\n\n    //\u67e5\u627e\u914d\u7f6e\u6587\u4ef6\u7684\u76ee\u5f55\n    private static final String PREFIX = "META-INF/services/";\n\n    //\u8868\u793a\u8981\u88ab\u52a0\u8f7d\u7684\u670d\u52a1\u7684\u7c7b\u6216\u63a5\u53e3\n    private final Class<S> service;\n\n    //\u8fd9\u4e2aClassLoader\u7528\u6765\u5b9a\u4f4d\uff0c\u52a0\u8f7d\uff0c\u5b9e\u4f8b\u5316\u670d\u52a1\u63d0\u4f9b\u8005\n    private final ClassLoader loader;\n\n    // \u8bbf\u95ee\u63a7\u5236\u4e0a\u4e0b\u6587\n    private final AccessControlContext acc;\n\n    // \u7f13\u5b58\u5df2\u7ecf\u88ab\u5b9e\u4f8b\u5316\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u6309\u7167\u5b9e\u4f8b\u5316\u7684\u987a\u5e8f\u5b58\u50a8\n    private LinkedHashMap<String,S> providers = new LinkedHashMap<>();\n\n    // \u8fed\u4ee3\u5668\n    private LazyIterator lookupIterator;\n\n\n    //\u91cd\u65b0\u52a0\u8f7d\uff0c\u5c31\u76f8\u5f53\u4e8e\u91cd\u65b0\u521b\u5efaServiceLoader\u4e86\uff0c\u7528\u4e8e\u65b0\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5b89\u88c5\u5230\u6b63\u5728\u8fd0\u884c\u7684Java\u865a\u62df\u673a\u4e2d\u7684\u60c5\u51b5\u3002\n    public void reload() {\n        //\u6e05\u7a7a\u7f13\u5b58\u4e2d\u6240\u6709\u5df2\u5b9e\u4f8b\u5316\u7684\u670d\u52a1\u63d0\u4f9b\u8005\n        providers.clear();\n        //\u65b0\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8be5\u8fed\u4ee3\u5668\u4f1a\u4ece\u5934\u67e5\u627e\u548c\u5b9e\u4f8b\u5316\u670d\u52a1\u63d0\u4f9b\u8005\n        lookupIterator = new LazyIterator(service, loader);\n    }\n\n    //\u79c1\u6709\u6784\u9020\u5668\n    //\u4f7f\u7528\u6307\u5b9a\u7684\u7c7b\u52a0\u8f7d\u5668\u548c\u670d\u52a1\u521b\u5efa\u670d\u52a1\u52a0\u8f7d\u5668\n    //\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7c7b\u52a0\u8f7d\u5668\uff0c\u4f7f\u7528\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\uff0c\u5c31\u662f\u5e94\u7528\u7c7b\u52a0\u8f7d\u5668\u3002\n    private ServiceLoader(Class<S> svc, ClassLoader cl) {\n        service = Objects.requireNonNull(svc, "Service interface cannot be null");\n        loader = (cl == null) ? ClassLoader.getSystemClassLoader() : cl;\n        acc = (System.getSecurityManager() != null) ? AccessController.getContext() : null;\n        reload();\n    }\n\n    //\u89e3\u6790\u5931\u8d25\u5904\u7406\u7684\u65b9\u6cd5\n    private static void fail(Class<?> service, String msg, Throwable cause)\n        throws ServiceConfigurationError\n    {\n        throw new ServiceConfigurationError(service.getName() + ": " + msg,\n                                            cause);\n    }\n\n    private static void fail(Class<?> service, String msg)\n        throws ServiceConfigurationError\n    {\n        throw new ServiceConfigurationError(service.getName() + ": " + msg);\n    }\n\n    private static void fail(Class<?> service, URL u, int line, String msg)\n        throws ServiceConfigurationError\n    {\n        fail(service, u + ":" + line + ": " + msg);\n    }\n\n    //\u89e3\u6790\u670d\u52a1\u63d0\u4f9b\u8005\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4e00\u884c\n    //\u9996\u5148\u53bb\u6389\u6ce8\u91ca\u6821\u9a8c\uff0c\u7136\u540e\u4fdd\u5b58\n    //\u8fd4\u56de\u4e0b\u4e00\u884c\u884c\u53f7\n    //\u91cd\u590d\u7684\u914d\u7f6e\u9879\u548c\u5df2\u7ecf\u88ab\u5b9e\u4f8b\u5316\u7684\u914d\u7f6e\u9879\u4e0d\u4f1a\u88ab\u4fdd\u5b58\n    private int parseLine(Class<?> service, URL u, BufferedReader r, int lc,\n                          List<String> names)\n        throws IOException, ServiceConfigurationError\n    {\n        //\u8bfb\u53d6\u4e00\u884c\n        String ln = r.readLine();\n        if (ln == null) {\n            return -1;\n        }\n        //#\u53f7\u4ee3\u8868\u6ce8\u91ca\u884c\n        int ci = ln.indexOf(\'#\');\n        if (ci >= 0) ln = ln.substring(0, ci);\n        ln = ln.trim();\n        int n = ln.length();\n        if (n != 0) {\n            if ((ln.indexOf(\' \') >= 0) || (ln.indexOf(\'\\t\') >= 0))\n                fail(service, u, lc, "Illegal configuration-file syntax");\n            int cp = ln.codePointAt(0);\n            if (!Character.isJavaIdentifierStart(cp))\n                fail(service, u, lc, "Illegal provider-class name: " + ln);\n            for (int i = Character.charCount(cp); i < n; i += Character.charCount(cp)) {\n                cp = ln.codePointAt(i);\n                if (!Character.isJavaIdentifierPart(cp) && (cp != \'.\'))\n                    fail(service, u, lc, "Illegal provider-class name: " + ln);\n            }\n            if (!providers.containsKey(ln) && !names.contains(ln))\n                names.add(ln);\n        }\n        return lc + 1;\n    }\n\n    //\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\uff0c\u89e3\u6790\u6307\u5b9a\u7684url\u914d\u7f6e\u6587\u4ef6\n    //\u4f7f\u7528parseLine\u65b9\u6cd5\u8fdb\u884c\u89e3\u6790\uff0c\u672a\u88ab\u5b9e\u4f8b\u5316\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4f1a\u88ab\u4fdd\u5b58\u5230\u7f13\u5b58\u4e2d\u53bb\n    private Iterator<String> parse(Class<?> service, URL u)\n        throws ServiceConfigurationError\n    {\n        InputStream in = null;\n        BufferedReader r = null;\n        ArrayList<String> names = new ArrayList<>();\n        try {\n            in = u.openStream();\n            r = new BufferedReader(new InputStreamReader(in, "utf-8"));\n            int lc = 1;\n            while ((lc = parseLine(service, u, r, lc, names)) >= 0);\n        }\n        return names.iterator();\n    }\n\n    //\u670d\u52a1\u63d0\u4f9b\u8005\u67e5\u627e\u7684\u8fed\u4ee3\u5668\n    private class LazyIterator\n        implements Iterator<S>\n    {\n\n        Class<S> service;//\u670d\u52a1\u63d0\u4f9b\u8005\u63a5\u53e3\n        ClassLoader loader;//\u7c7b\u52a0\u8f7d\u5668\n        Enumeration<URL> configs = null;//\u4fdd\u5b58\u5b9e\u73b0\u7c7b\u7684url\n        Iterator<String> pending = null;//\u4fdd\u5b58\u5b9e\u73b0\u7c7b\u7684\u5168\u540d\n        String nextName = null;//\u8fed\u4ee3\u5668\u4e2d\u4e0b\u4e00\u4e2a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d\n\n        private LazyIterator(Class<S> service, ClassLoader loader) {\n            this.service = service;\n            this.loader = loader;\n        }\n\n        private boolean hasNextService() {\n            if (nextName != null) {\n                return true;\n            }\n            if (configs == null) {\n                try {\n                    String fullName = PREFIX + service.getName();\n                    if (loader == null)\n                        configs = ClassLoader.getSystemResources(fullName);\n                    else\n                        configs = loader.getResources(fullName);\n                }\n            }\n            while ((pending == null) || !pending.hasNext()) {\n                if (!configs.hasMoreElements()) {\n                    return false;\n                }\n                pending = parse(service, configs.nextElement());\n            }\n            nextName = pending.next();\n            return true;\n        }\n\n        private S nextService() {\n            if (!hasNextService())\n                throw new NoSuchElementException();\n            String cn = nextName;\n            nextName = null;\n            Class<?> c = null;\n            try {\n                c = Class.forName(cn, false, loader);\n            }\n            if (!service.isAssignableFrom(c)) {\n                fail(service, "Provider " + cn  + " not a subtype");\n            }\n            try {\n                S p = service.cast(c.newInstance());\n                providers.put(cn, p);\n                return p;\n            }\n        }\n\n        public boolean hasNext() {\n            if (acc == null) {\n                return hasNextService();\n            } else {\n                PrivilegedAction<Boolean> action = new PrivilegedAction<Boolean>() {\n                    public Boolean run() { return hasNextService(); }\n                };\n                return AccessController.doPrivileged(action, acc);\n            }\n        }\n\n        public S next() {\n            if (acc == null) {\n                return nextService();\n            } else {\n                PrivilegedAction<S> action = new PrivilegedAction<S>() {\n                    public S run() { return nextService(); }\n                };\n                return AccessController.doPrivileged(action, acc);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n\n    }\n\n    //\u83b7\u53d6\u8fed\u4ee3\u5668\n    //\u8fd4\u56de\u904d\u5386\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u8fed\u4ee3\u5668\n    //\u4ee5\u61d2\u52a0\u8f7d\u7684\u65b9\u5f0f\u52a0\u8f7d\u53ef\u7528\u7684\u670d\u52a1\u63d0\u4f9b\u8005\n    //\u61d2\u52a0\u8f7d\u7684\u5b9e\u73b0\u662f\uff1a\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u548c\u5b9e\u4f8b\u5316\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5de5\u4f5c\u7531\u8fed\u4ee3\u5668\u672c\u8eab\u5b8c\u6210\n    public Iterator<S> iterator() {\n        return new Iterator<S>() {\n            //\u6309\u7167\u5b9e\u4f8b\u5316\u987a\u5e8f\u8fd4\u56de\u5df2\u7ecf\u7f13\u5b58\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5b9e\u4f8b\n            Iterator<Map.Entry<String,S>> knownProviders\n                = providers.entrySet().iterator();\n\n            public boolean hasNext() {\n                if (knownProviders.hasNext())\n                    return true;\n                return lookupIterator.hasNext();\n            }\n\n            public S next() {\n                if (knownProviders.hasNext())\n                    return knownProviders.next().getValue();\n                return lookupIterator.next();\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n        };\n    }\n\n    //\u4e3a\u6307\u5b9a\u7684\u670d\u52a1\u4f7f\u7528\u6307\u5b9a\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u521b\u5efa\u4e00\u4e2aServiceLoader\n    public static <S> ServiceLoader<S> load(Class<S> service,\n                                            ClassLoader loader)\n    {\n        return new ServiceLoader<>(service, loader);\n    }\n\n    //\u4f7f\u7528\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u521b\u5efaServiceLoader\n    public static <S> ServiceLoader<S> load(Class<S> service) {\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        return ServiceLoader.load(service, cl);\n    }\n\n    //\u4f7f\u7528\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668\u4e3a\u6307\u5b9a\u7684\u670d\u52a1\u521b\u5efaServiceLoader\n    //\u53ea\u80fd\u627e\u5230\u5e76\u52a0\u8f7d\u5df2\u7ecf\u5b89\u88c5\u5230\u5f53\u524dJava\u865a\u62df\u673a\u4e2d\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5e94\u7528\u7a0b\u5e8f\u7c7b\u8def\u5f84\u4e2d\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5c06\u88ab\u5ffd\u7565\n    public static <S> ServiceLoader<S> loadInstalled(Class<S> service) {\n        ClassLoader cl = ClassLoader.getSystemClassLoader();\n        ClassLoader prev = null;\n        while (cl != null) {\n            prev = cl;\n            cl = cl.getParent();\n        }\n        return ServiceLoader.load(service, prev);\n    }\n\n    public String toString() {\n        return "java.util.ServiceLoader[" + service.getName() + "]";\n    }\n\n}\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u9996\u5148"),"\uff0cServiceLoader\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Iterable"),"\u63a5\u53e3\uff0c\u6240\u4ee5\u5b83\u6709\u8fed\u4ee3\u5668\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u4e3b\u8981\u90fd\u662f\u5b9e\u73b0\u4e86\u8fed\u4ee3\u5668\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"hasNext"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"next"),"\u65b9\u6cd5\u3002\u8fd9\u91cc\u4e3b\u8981\u90fd\u662f\u8c03\u7528\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"lookupIterator"),"\u7684\u76f8\u5e94",(0,r.kt)("inlineCode",{parentName:"p"},"hasNext"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"next"),"\u65b9\u6cd5\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"lookupIterator"),"\u662f\u61d2\u52a0\u8f7d\u8fed\u4ee3\u5668\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5176\u6b21"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"LazyIterator"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"hasNext"),"\u65b9\u6cd5\uff0c\u9759\u6001\u53d8\u91cfPREFIX\u5c31\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"\u201dMETA-INF/services/\u201d"),"\u76ee\u5f55\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u9700\u8981\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"classpath"),"\u4e0b\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/services/"),"\u76ee\u5f55\u91cc\u521b\u5efa\u4e00\u4e2a\u4ee5\u670d\u52a1\u63a5\u53e3\u547d\u540d\u7684\u6587\u4ef6\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6700\u540e"),"\uff0c\u901a\u8fc7\u53cd\u5c04\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"Class.forName()"),"\u52a0\u8f7d\u7c7b\u5bf9\u8c61\uff0c\u5e76\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"newInstance"),"\u65b9\u6cd5\u5c06\u7c7b\u5b9e\u4f8b\u5316\uff0c\u5e76\u628a\u5b9e\u4f8b\u5316\u540e\u7684\u7c7b\u7f13\u5b58\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"providers"),"\u5bf9\u8c61\u4e2d\uff0c(",(0,r.kt)("inlineCode",{parentName:"p"},"LinkedHashMap<String,S>"),"\u7c7b\u578b\uff09\u7136\u540e\u8fd4\u56de\u5b9e\u4f8b\u5bf9\u8c61\u3002\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"ServiceLoader"),"\u4e0d\u662f\u5b9e\u4f8b\u5316\u4ee5\u540e\uff0c\u5c31\u53bb\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5e76\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u800c\u662f\u7b49\u5230\u4f7f\u7528\u8fed\u4ee3\u5668\u53bb\u904d\u5386\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u52a0\u8f7d\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u89e3\u6790\uff0c\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"hasNext"),"\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u53bb\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\uff0c\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"next"),"\u65b9\u6cd5\u7684\u65f6\u5019\u8fdb\u884c\u5b9e\u4f8b\u5316\u5e76\u7f13\u5b58\u3002\n\u6240\u6709\u7684\u914d\u7f6e\u6587\u4ef6\u53ea\u4f1a\u52a0\u8f7d\u4e00\u6b21\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u4e5f\u53ea\u4f1a\u88ab\u5b9e\u4f8b\u5316\u4e00\u6b21\uff0c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u53ef\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"reload"),"\u65b9\u6cd5"),(0,r.kt)("h3",{id:"spi\u673a\u5236\u7684\u7f3a\u9677"},"SPI\u673a\u5236\u7684\u7f3a\u9677"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e0d\u80fd\u6309\u9700\u52a0\u8f7d\uff0c\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5b9e\u73b0\uff0c\u5e76\u5b9e\u4f8b\u5316\uff0c\u7136\u540e\u5728\u5faa\u73af\u4e2d\u624d\u80fd\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5b9e\u73b0\u3002\u5982\u679c\u4e0d\u60f3\u7528\u67d0\u4e9b\u5b9e\u73b0\u7c7b\uff0c\u6216\u8005\u67d0\u4e9b\u7c7b\u5b9e\u4f8b\u5316\u5f88\u8017\u65f6\uff0c\u5b83\u4e5f\u88ab\u8f7d\u5165\u5e76\u5b9e\u4f8b\u5316\u4e86\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u6d6a\u8d39\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u83b7\u53d6\u67d0\u4e2a\u5b9e\u73b0\u7c7b\u7684\u65b9\u5f0f\u4e0d\u591f\u7075\u6d3b\uff0c\u53ea\u80fd\u901a\u8fc7 Iterator \u5f62\u5f0f\u83b7\u53d6\uff0c\u4e0d\u80fd\u6839\u636e\u67d0\u4e2a\u53c2\u6570\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u591a\u4e2a\u5e76\u53d1\u591a\u7ebf\u7a0b\u4f7f\u7528 ServiceLoader \u7c7b\u7684\u5b9e\u4f8b\u662f\u4e0d\u5b89\u5168\u7684"))))}u.isMDXComponent=!0}}]);